// Import Libraries
import org.jlab.jnp.hipo4.io.*;
import org.jlab.jnp.hipo4.data.*;
import org.jlab.groot.data.*;
import org.jlab.groot.graphics.*;
import org.jlab.groot.math.*;
import org.jlab.groot.ui.*;
import org.jlab.clas.physics.*;
import org.jlab.clas.physics.LorentzVector;
import org.jlab.clas.physics.PhysicsEvent;
import org.jlab.clas.physics.Particle;
import org.jlab.clas.physics.EventFilter;
import org.jlab.physics.io.DataManager;
//---------------------------------------------------------------------
// Create HipoReader object and load in file. Create event class and bank instance.
HipoReader reader = new HipoReader();
reader.open("/home/grassla/SimOuts.hipo");
Event 	event = new Event();
Bank  mclund = new Bank(reader.getSchemaFactory().getSchema("MC::Lund"));
//----------------------------------------------------------------------
// Creat TCanvas.
TCanvas a = new TCanvas("a",800,800);
//----------------------------------------------------------------------
// Create histograms.
H1F  hd = new H1F("hd" ,100, 0.0, 100);
//----------------------------------------------------------------------
// Variables.
int omega_count = 0;
//----------------------------------------------------------------------
EventFilter  Omega_filter = new EventFilter("11:22:22:211:-211:X+:X-:Xn");
reader.getEvent(event,0);  
while(reader.hasNext()==true){ 
     reader.nextEvent(event);
     event.read(mclund);
     PhysicsEvent physEvent = DataManager.getPhysicsEvent(10.6,particles);
     byte parent = particles.getByte("parent",row);
     int parentpid = particles.getInt("pid",parent-1);
     Particle Omega = physEvent.getParticle("[22,0]+[22,1]+[211]+[-211]");
     omega_count = 0;
     if(Omega_filter.isValid(physEvent)==true){
     if(pid==22||pid==211||pid==-211$$parentpid==223){
      omega_count++; }
     
     }
}
System.out.println("Omega parents: " + omega_count);
